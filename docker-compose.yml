networks:
  localdev:
    name: localdev
    external: true

services:
  db:
    image: mcr.microsoft.com/mssql/server
    container_name: db
    networks:
      - localdev
    environment:
      - SA_PASSWORD=FexseL0cal
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    # volumes:
    #   - db_data:/var/opt/mssql # Uncomment this line to persist data
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  api:
    build:
      context: .
      target: build # Use the build stage defined in the Dockerfile
    command: npm run start:bmr # Run build, migration and start the server
    image: api:local
    container_name: api
    volumes: # Mount the local source code to the container
      - .:/usr/src/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "http://localhost:3000/public/health || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - localdev
    environment:
      - REDIS_URL=redis://cache:6379
      - SWAGGER_SERVERS=http://localhost:3000
      - DATABASE_URL=mssql://sa:FexseL0cal@db:1433/master
      # - DATABASE_HOST=db
      # - DATABASE_PORT=1433
      # - DATABASE_USER=SA
      # - DATABASE_PASS=FexseL0cal
      # - DATABASE_TYPE=mssql
      # - DATABASE_DBNAME=master
      - DATABASE_SSL_ENABLED=false

volumes:
  db_data: